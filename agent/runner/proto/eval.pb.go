// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: runner/proto/eval.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FindingStatus int32

const (
	FindingStatus_UNKNOWN   FindingStatus = 0 // Default value
	FindingStatus_OPEN      FindingStatus = 1
	FindingStatus_MITIGATED FindingStatus = 2
	FindingStatus_RESOLVED  FindingStatus = 3
)

// Enum value maps for FindingStatus.
var (
	FindingStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "OPEN",
		2: "MITIGATED",
		3: "RESOLVED",
	}
	FindingStatus_value = map[string]int32{
		"UNKNOWN":   0,
		"OPEN":      1,
		"MITIGATED": 2,
		"RESOLVED":  3,
	}
)

func (x FindingStatus) Enum() *FindingStatus {
	p := new(FindingStatus)
	*p = x
	return p
}

func (x FindingStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FindingStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_runner_proto_eval_proto_enumTypes[0].Descriptor()
}

func (FindingStatus) Type() protoreflect.EnumType {
	return &file_runner_proto_eval_proto_enumTypes[0]
}

func (x FindingStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FindingStatus.Descriptor instead.
func (FindingStatus) EnumDescriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{0}
}

type ExecutionStatus int32

const (
	ExecutionStatus_SUCCESS ExecutionStatus = 0
	ExecutionStatus_FAILURE ExecutionStatus = 1
)

// Enum value maps for ExecutionStatus.
var (
	ExecutionStatus_name = map[int32]string{
		0: "SUCCESS",
		1: "FAILURE",
	}
	ExecutionStatus_value = map[string]int32{
		"SUCCESS": 0,
		"FAILURE": 1,
	}
)

func (x ExecutionStatus) Enum() *ExecutionStatus {
	p := new(ExecutionStatus)
	*p = x
	return p
}

func (x ExecutionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ExecutionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_runner_proto_eval_proto_enumTypes[1].Descriptor()
}

func (ExecutionStatus) Type() protoreflect.EnumType {
	return &file_runner_proto_eval_proto_enumTypes[1]
}

func (x ExecutionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ExecutionStatus.Descriptor instead.
func (ExecutionStatus) EnumDescriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{1}
}

type Property struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Value         string                 `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Property) Reset() {
	*x = Property{}
	mi := &file_runner_proto_eval_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Property) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Property) ProtoMessage() {}

func (x *Property) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Property.ProtoReflect.Descriptor instead.
func (*Property) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{0}
}

func (x *Property) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Property) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Link struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Href             string                 `protobuf:"bytes,1,opt,name=Href,proto3" json:"Href,omitempty"`
	MediaType        string                 `protobuf:"bytes,2,opt,name=MediaType,proto3" json:"MediaType,omitempty"`
	Rel              string                 `protobuf:"bytes,3,opt,name=Rel,proto3" json:"Rel,omitempty"`
	ResourceFragment string                 `protobuf:"bytes,4,opt,name=ResourceFragment,proto3" json:"ResourceFragment,omitempty"`
	Text             string                 `protobuf:"bytes,5,opt,name=Text,proto3" json:"Text,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Link) Reset() {
	*x = Link{}
	mi := &file_runner_proto_eval_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{1}
}

func (x *Link) GetHref() string {
	if x != nil {
		return x.Href
	}
	return ""
}

func (x *Link) GetMediaType() string {
	if x != nil {
		return x.MediaType
	}
	return ""
}

func (x *Link) GetRel() string {
	if x != nil {
		return x.Rel
	}
	return ""
}

func (x *Link) GetResourceFragment() string {
	if x != nil {
		return x.ResourceFragment
	}
	return ""
}

func (x *Link) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

// LogEntry represents a record in an assessment log that documents a specific
// event or action during the assessment. A log entry can contain various
// information, including observations or findings, but it's essentially a
// chronological record.
type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	Start         string                 `protobuf:"bytes,3,opt,name=Start,proto3" json:"Start,omitempty"`
	End           string                 `protobuf:"bytes,4,opt,name=End,proto3" json:"End,omitempty"`
	Remarks       string                 `protobuf:"bytes,5,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	Props         []*Property            `protobuf:"bytes,6,rep,name=Props,proto3" json:"Props,omitempty"`
	Links         []*Link                `protobuf:"bytes,7,rep,name=Links,proto3" json:"Links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_runner_proto_eval_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{2}
}

func (x *LogEntry) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LogEntry) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *LogEntry) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *LogEntry) GetEnd() string {
	if x != nil {
		return x.End
	}
	return ""
}

func (x *LogEntry) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *LogEntry) GetProps() []*Property {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *LogEntry) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type Evidence struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=Description,proto3" json:"Description,omitempty"`
	Props         []*Property            `protobuf:"bytes,3,rep,name=Props,proto3" json:"Props,omitempty"`
	Links         []*Link                `protobuf:"bytes,4,rep,name=Links,proto3" json:"Links,omitempty"`
	Remarks       string                 `protobuf:"bytes,5,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Evidence) Reset() {
	*x = Evidence{}
	mi := &file_runner_proto_eval_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Evidence) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Evidence) ProtoMessage() {}

func (x *Evidence) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Evidence.ProtoReflect.Descriptor instead.
func (*Evidence) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{3}
}

func (x *Evidence) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Evidence) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Evidence) GetProps() []*Property {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *Evidence) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Evidence) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

type Finding struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	SubjectId           string                 `protobuf:"bytes,2,opt,name=SubjectId,proto3" json:"SubjectId,omitempty"`
	Title               string                 `protobuf:"bytes,3,opt,name=Title,proto3" json:"Title,omitempty"`
	Description         string                 `protobuf:"bytes,4,opt,name=Description,proto3" json:"Description,omitempty"`
	Status              string                 `protobuf:"bytes,5,opt,name=Status,proto3" json:"Status,omitempty"`
	Remarks             string                 `protobuf:"bytes,6,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	Props               []*Property            `protobuf:"bytes,7,rep,name=Props,proto3" json:"Props,omitempty"`
	Links               []*Link                `protobuf:"bytes,8,rep,name=Links,proto3" json:"Links,omitempty"`
	Tasks               []*Task                `protobuf:"bytes,9,rep,name=Tasks,proto3" json:"Tasks,omitempty"`
	RelatedObservations []string               `protobuf:"bytes,10,rep,name=RelatedObservations,proto3" json:"RelatedObservations,omitempty"`
	RelatedRisks        []string               `protobuf:"bytes,11,rep,name=RelatedRisks,proto3" json:"RelatedRisks,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Finding) Reset() {
	*x = Finding{}
	mi := &file_runner_proto_eval_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Finding) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Finding) ProtoMessage() {}

func (x *Finding) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Finding.ProtoReflect.Descriptor instead.
func (*Finding) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{4}
}

func (x *Finding) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Finding) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *Finding) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Finding) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Finding) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Finding) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *Finding) GetProps() []*Property {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *Finding) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Finding) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Finding) GetRelatedObservations() []string {
	if x != nil {
		return x.RelatedObservations
	}
	return nil
}

func (x *Finding) GetRelatedRisks() []string {
	if x != nil {
		return x.RelatedRisks
	}
	return nil
}

type Observation struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=Id,proto3" json:"Id,omitempty"`
	SubjectId        string                 `protobuf:"bytes,2,opt,name=SubjectId,proto3" json:"SubjectId,omitempty"`
	Collected        string                 `protobuf:"bytes,3,opt,name=Collected,proto3" json:"Collected,omitempty"`
	Title            string                 `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Description      string                 `protobuf:"bytes,5,opt,name=Description,proto3" json:"Description,omitempty"`
	Expires          string                 `protobuf:"bytes,6,opt,name=Expires,proto3" json:"Expires,omitempty"`
	Remarks          string                 `protobuf:"bytes,7,opt,name=Remarks,proto3" json:"Remarks,omitempty"`
	Props            []*Property            `protobuf:"bytes,9,rep,name=Props,proto3" json:"Props,omitempty"`
	Links            []*Link                `protobuf:"bytes,8,rep,name=Links,proto3" json:"Links,omitempty"`
	RelevantEvidence []*Evidence            `protobuf:"bytes,10,rep,name=RelevantEvidence,proto3" json:"RelevantEvidence,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Observation) Reset() {
	*x = Observation{}
	mi := &file_runner_proto_eval_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Observation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Observation) ProtoMessage() {}

func (x *Observation) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Observation.ProtoReflect.Descriptor instead.
func (*Observation) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{5}
}

func (x *Observation) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Observation) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *Observation) GetCollected() string {
	if x != nil {
		return x.Collected
	}
	return ""
}

func (x *Observation) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Observation) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Observation) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

func (x *Observation) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

func (x *Observation) GetProps() []*Property {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *Observation) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

func (x *Observation) GetRelevantEvidence() []*Evidence {
	if x != nil {
		return x.RelevantEvidence
	}
	return nil
}

type Step struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	SubjectId     string                 `protobuf:"bytes,2,opt,name=SubjectId,proto3" json:"SubjectId,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Step) Reset() {
	*x = Step{}
	mi := &file_runner_proto_eval_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Step) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Step) ProtoMessage() {}

func (x *Step) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Step.ProtoReflect.Descriptor instead.
func (*Step) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{6}
}

func (x *Step) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Step) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *Step) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	SubjectId     string                 `protobuf:"bytes,2,opt,name=SubjectId,proto3" json:"SubjectId,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Activities    []*Activity            `protobuf:"bytes,4,rep,name=Activities,proto3" json:"Activities,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_runner_proto_eval_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{7}
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetActivities() []*Activity {
	if x != nil {
		return x.Activities
	}
	return nil
}

type Activity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	SubjectId     string                 `protobuf:"bytes,2,opt,name=SubjectId,proto3" json:"SubjectId,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Type          string                 `protobuf:"bytes,4,opt,name=Type,proto3" json:"Type,omitempty"`
	Steps         []*Step                `protobuf:"bytes,5,rep,name=Steps,proto3" json:"Steps,omitempty"`
	Tools         []string               `protobuf:"bytes,6,rep,name=Tools,proto3" json:"Tools,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Activity) Reset() {
	*x = Activity{}
	mi := &file_runner_proto_eval_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Activity) ProtoMessage() {}

func (x *Activity) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Activity.ProtoReflect.Descriptor instead.
func (*Activity) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{8}
}

func (x *Activity) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Activity) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *Activity) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Activity) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Activity) GetSteps() []*Step {
	if x != nil {
		return x.Steps
	}
	return nil
}

func (x *Activity) GetTools() []string {
	if x != nil {
		return x.Tools
	}
	return nil
}

type Risk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=Title,proto3" json:"Title,omitempty"`
	SubjectId     string                 `protobuf:"bytes,2,opt,name=SubjectId,proto3" json:"SubjectId,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=Description,proto3" json:"Description,omitempty"`
	Statement     string                 `protobuf:"bytes,4,opt,name=Statement,proto3" json:"Statement,omitempty"`
	Props         []*Property            `protobuf:"bytes,5,rep,name=Props,proto3" json:"Props,omitempty"`
	Links         []*Link                `protobuf:"bytes,6,rep,name=Links,proto3" json:"Links,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Risk) Reset() {
	*x = Risk{}
	mi := &file_runner_proto_eval_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Risk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Risk) ProtoMessage() {}

func (x *Risk) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Risk.ProtoReflect.Descriptor instead.
func (*Risk) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{9}
}

func (x *Risk) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Risk) GetSubjectId() string {
	if x != nil {
		return x.SubjectId
	}
	return ""
}

func (x *Risk) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Risk) GetStatement() string {
	if x != nil {
		return x.Statement
	}
	return ""
}

func (x *Risk) GetProps() []*Property {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *Risk) GetLinks() []*Link {
	if x != nil {
		return x.Links
	}
	return nil
}

type EvalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BundlePath    string                 `protobuf:"bytes,1,opt,name=bundlePath,proto3" json:"bundlePath,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvalRequest) Reset() {
	*x = EvalRequest{}
	mi := &file_runner_proto_eval_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvalRequest) ProtoMessage() {}

func (x *EvalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvalRequest.ProtoReflect.Descriptor instead.
func (*EvalRequest) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{10}
}

func (x *EvalRequest) GetBundlePath() string {
	if x != nil {
		return x.BundlePath
	}
	return ""
}

// *
// EvalResponse is the result of an assessment check
// We don't use the Plan information here as it can be provided by the runtime
type EvalResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        ExecutionStatus        `protobuf:"varint,1,opt,name=Status,proto3,enum=proto.ExecutionStatus" json:"Status,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=Title,proto3" json:"Title,omitempty"`
	Observations  []*Observation         `protobuf:"bytes,3,rep,name=Observations,proto3" json:"Observations,omitempty"`
	Findings      []*Finding             `protobuf:"bytes,4,rep,name=Findings,proto3" json:"Findings,omitempty"`
	Risks         []*Risk                `protobuf:"bytes,5,rep,name=Risks,proto3" json:"Risks,omitempty"`
	Logs          []*LogEntry            `protobuf:"bytes,6,rep,name=Logs,proto3" json:"Logs,omitempty"`
	Expires       string                 `protobuf:"bytes,7,opt,name=Expires,proto3" json:"Expires,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EvalResponse) Reset() {
	*x = EvalResponse{}
	mi := &file_runner_proto_eval_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EvalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EvalResponse) ProtoMessage() {}

func (x *EvalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_runner_proto_eval_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EvalResponse.ProtoReflect.Descriptor instead.
func (*EvalResponse) Descriptor() ([]byte, []int) {
	return file_runner_proto_eval_proto_rawDescGZIP(), []int{11}
}

func (x *EvalResponse) GetStatus() ExecutionStatus {
	if x != nil {
		return x.Status
	}
	return ExecutionStatus_SUCCESS
}

func (x *EvalResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *EvalResponse) GetObservations() []*Observation {
	if x != nil {
		return x.Observations
	}
	return nil
}

func (x *EvalResponse) GetFindings() []*Finding {
	if x != nil {
		return x.Findings
	}
	return nil
}

func (x *EvalResponse) GetRisks() []*Risk {
	if x != nil {
		return x.Risks
	}
	return nil
}

func (x *EvalResponse) GetLogs() []*LogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *EvalResponse) GetExpires() string {
	if x != nil {
		return x.Expires
	}
	return ""
}

var File_runner_proto_eval_proto protoreflect.FileDescriptor

var file_runner_proto_eval_proto_rawDesc = []byte{
	0x0a, 0x17, 0x72, 0x75, 0x6e, 0x6e, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65,
	0x76, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x34, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8a, 0x01, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x12, 0x0a, 0x04, 0x48, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48,
	0x72, 0x65, 0x66, 0x12, 0x1c, 0x0a, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x52, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x52, 0x65, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46,
	0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x46, 0x72, 0x61, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54,
	0x65, 0x78, 0x74, 0x22, 0xce, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x45, 0x6e, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x05, 0x50, 0x72,
	0x6f, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x70,
	0x73, 0x12, 0x21, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x4c,
	0x69, 0x6e, 0x6b, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x08, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x05, 0x50, 0x72, 0x6f,
	0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x70, 0x73,
	0x12, 0x21, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x4c, 0x69,
	0x6e, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0xe4, 0x02,
	0x0a, 0x07, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x73, 0x12, 0x25, 0x0a, 0x05, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x05, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x54,
	0x61, 0x73, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x30,
	0x0a, 0x13, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x13, 0x52, 0x65, 0x6c,
	0x61, 0x74, 0x65, 0x64, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x12, 0x22, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52, 0x69, 0x73, 0x6b, 0x73,
	0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x52,
	0x69, 0x73, 0x6b, 0x73, 0x22, 0xcc, 0x02, 0x0a, 0x0b, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x78, 0x70, 0x69, 0x72,
	0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x12, 0x25, 0x0a, 0x05,
	0x50, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x05, 0x50, 0x72,
	0x6f, 0x70, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x12, 0x3b, 0x0a, 0x10, 0x52, 0x65, 0x6c, 0x65, 0x76, 0x61,
	0x6e, 0x74, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x10, 0x52, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x74, 0x45, 0x76, 0x69, 0x64, 0x65,
	0x6e, 0x63, 0x65, 0x22, 0x5c, 0x0a, 0x04, 0x53, 0x74, 0x65, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x8d, 0x01, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x41, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x22, 0xad, 0x01, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x05, 0x53, 0x74, 0x65, 0x70,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x53, 0x74, 0x65, 0x70, 0x52, 0x05, 0x53, 0x74, 0x65, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54,
	0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x54, 0x6f, 0x6f, 0x6c,
	0x73, 0x22, 0xc4, 0x01, 0x0a, 0x04, 0x52, 0x69, 0x73, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x20,
	0x0a, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x0a, 0x05, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x05,
	0x50, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x05, 0x4c, 0x69, 0x6e, 0x6b, 0x73, 0x22, 0x2d, 0x0a, 0x0b, 0x45, 0x76, 0x61, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x75, 0x6e, 0x64, 0x6c,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x9a, 0x02, 0x0a, 0x0c, 0x45, 0x76, 0x61, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x36,
	0x0a, 0x0c, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4f, 0x62, 0x73,
	0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2a, 0x0a, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x52, 0x08, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x73, 0x12, 0x21, 0x0a, 0x05, 0x52, 0x69, 0x73, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x52, 0x69, 0x73, 0x6b, 0x52, 0x05,
	0x52, 0x69, 0x73, 0x6b, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x6f, 0x67, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x45, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x73, 0x2a, 0x43, 0x0a, 0x0d, 0x46, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x4f, 0x50, 0x45, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x4d, 0x49, 0x54, 0x49, 0x47, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x52,
	0x45, 0x53, 0x4f, 0x4c, 0x56, 0x45, 0x44, 0x10, 0x03, 0x2a, 0x2b, 0x0a, 0x0f, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07,
	0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x41, 0x49,
	0x4c, 0x55, 0x52, 0x45, 0x10, 0x01, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_runner_proto_eval_proto_rawDescOnce sync.Once
	file_runner_proto_eval_proto_rawDescData = file_runner_proto_eval_proto_rawDesc
)

func file_runner_proto_eval_proto_rawDescGZIP() []byte {
	file_runner_proto_eval_proto_rawDescOnce.Do(func() {
		file_runner_proto_eval_proto_rawDescData = protoimpl.X.CompressGZIP(file_runner_proto_eval_proto_rawDescData)
	})
	return file_runner_proto_eval_proto_rawDescData
}

var file_runner_proto_eval_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_runner_proto_eval_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_runner_proto_eval_proto_goTypes = []any{
	(FindingStatus)(0),   // 0: proto.FindingStatus
	(ExecutionStatus)(0), // 1: proto.ExecutionStatus
	(*Property)(nil),     // 2: proto.Property
	(*Link)(nil),         // 3: proto.Link
	(*LogEntry)(nil),     // 4: proto.LogEntry
	(*Evidence)(nil),     // 5: proto.Evidence
	(*Finding)(nil),      // 6: proto.Finding
	(*Observation)(nil),  // 7: proto.Observation
	(*Step)(nil),         // 8: proto.Step
	(*Task)(nil),         // 9: proto.Task
	(*Activity)(nil),     // 10: proto.Activity
	(*Risk)(nil),         // 11: proto.Risk
	(*EvalRequest)(nil),  // 12: proto.EvalRequest
	(*EvalResponse)(nil), // 13: proto.EvalResponse
}
var file_runner_proto_eval_proto_depIdxs = []int32{
	2,  // 0: proto.LogEntry.Props:type_name -> proto.Property
	3,  // 1: proto.LogEntry.Links:type_name -> proto.Link
	2,  // 2: proto.Evidence.Props:type_name -> proto.Property
	3,  // 3: proto.Evidence.Links:type_name -> proto.Link
	2,  // 4: proto.Finding.Props:type_name -> proto.Property
	3,  // 5: proto.Finding.Links:type_name -> proto.Link
	9,  // 6: proto.Finding.Tasks:type_name -> proto.Task
	2,  // 7: proto.Observation.Props:type_name -> proto.Property
	3,  // 8: proto.Observation.Links:type_name -> proto.Link
	5,  // 9: proto.Observation.RelevantEvidence:type_name -> proto.Evidence
	10, // 10: proto.Task.Activities:type_name -> proto.Activity
	8,  // 11: proto.Activity.Steps:type_name -> proto.Step
	2,  // 12: proto.Risk.Props:type_name -> proto.Property
	3,  // 13: proto.Risk.Links:type_name -> proto.Link
	1,  // 14: proto.EvalResponse.Status:type_name -> proto.ExecutionStatus
	7,  // 15: proto.EvalResponse.Observations:type_name -> proto.Observation
	6,  // 16: proto.EvalResponse.Findings:type_name -> proto.Finding
	11, // 17: proto.EvalResponse.Risks:type_name -> proto.Risk
	4,  // 18: proto.EvalResponse.Logs:type_name -> proto.LogEntry
	19, // [19:19] is the sub-list for method output_type
	19, // [19:19] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_runner_proto_eval_proto_init() }
func file_runner_proto_eval_proto_init() {
	if File_runner_proto_eval_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_runner_proto_eval_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_runner_proto_eval_proto_goTypes,
		DependencyIndexes: file_runner_proto_eval_proto_depIdxs,
		EnumInfos:         file_runner_proto_eval_proto_enumTypes,
		MessageInfos:      file_runner_proto_eval_proto_msgTypes,
	}.Build()
	File_runner_proto_eval_proto = out.File
	file_runner_proto_eval_proto_rawDesc = nil
	file_runner_proto_eval_proto_goTypes = nil
	file_runner_proto_eval_proto_depIdxs = nil
}
