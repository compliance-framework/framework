basePath: /api
definitions:
  api.Error:
    properties:
      errors:
        additionalProperties: true
        type: object
    type: object
  domain.Action:
    properties:
      date:
        type: string
      description:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      responsiblePartyUuids:
        items:
          type: string
        type: array
      system:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  domain.Activity:
    properties:
      description:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      provider:
        $ref: '#/definitions/domain.Provider'
      remarks:
        type: string
      responsibleRoles:
        items:
          type: string
        type: array
      steps:
        items:
          $ref: '#/definitions/domain.Step'
        type: array
      subjects:
        $ref: '#/definitions/domain.SubjectSelection'
      title:
        type: string
      tools:
        items:
          type: string
        type: array
      type:
        type: string
    type: object
  domain.Actor:
    properties:
      description:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      roleId:
        type: string
      title:
        type: string
      type:
        $ref: '#/definitions/domain.ActorType'
      uuid:
        type: string
    type: object
  domain.ActorType:
    enum:
    - tool
    - assessment-platform
    - party
    type: string
    x-enum-varnames:
    - ActorTypeTool
    - ActorTypeAssessmentPlatform
    - ActorTypeParty
  domain.Attestation:
    properties:
      parts:
        items:
          $ref: '#/definitions/domain.Part'
        type: array
      responsibleParties:
        items:
          type: string
        type: array
    type: object
  domain.AuthorizationBoundary:
    properties:
      description:
        type: string
      diagrams:
        description: Diagrams is an optional collection of visual representations
          of the boundary.
        items:
          $ref: '#/definitions/domain.Diagram'
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.BackMatter:
    properties:
      resources:
        items:
          $ref: '#/definitions/domain.Resource'
        type: array
    type: object
  domain.Base64:
    properties:
      filename:
        description: Name of the file before it was encoded as Base64.
        type: string
      media-type:
        description: A label that indicates the nature of a resource.
        type: string
      value:
        description: The Base64 encoded value.
        type: string
    type: object
  domain.Catalog:
    properties:
      backMatter:
        $ref: '#/definitions/domain.BackMatter'
      controlUuids:
        description: Reference to controls. Controls is an array of objects in the
          database
        items:
          $ref: '#/definitions/domain.Control'
        type: array
      groupUuids:
        description: Reference to groups
        items:
          type: string
        type: array
      metadata:
        $ref: '#/definitions/domain.Metadata'
      params:
        items:
          $ref: '#/definitions/domain.Parameter'
        type: array
      title:
        description: "Doesn't exist in OSCAL for some reason \U0001F937\U0001F3FB"
        type: string
      uuid:
        type: string
    type: object
  domain.Characterization:
    properties:
      facets:
        items:
          $ref: '#/definitions/domain.Facet'
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      originActors:
        description: Actors / Tasks Identify the source of the finding, such as a
          tool, interviewed person, or activity
        items:
          type: string
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      relatedTasks:
        items:
          type: string
        type: array
    type: object
  domain.Citation:
    properties:
      links:
        description: Links associated with the citation.
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        description: Properties of the citation.
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      text:
        description: A line of citation text.
        type: string
    type: object
  domain.Constraint:
    properties:
      description:
        type: string
      tests:
        items:
          $ref: '#/definitions/domain.ConstraintTest'
        type: array
    type: object
  domain.ConstraintTest:
    properties:
      expression:
        type: string
      remarks:
        type: string
    type: object
  domain.Control:
    properties:
      class:
        type: string
      controlUuids:
        description: Reference to controls
        items:
          type: string
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      params:
        items:
          $ref: '#/definitions/domain.Parameter'
        type: array
      parts:
        items:
          $ref: '#/definitions/domain.Part'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      title:
        type: string
      uuid:
        type: string
    type: object
  domain.ControlsAndObjectives:
    properties:
      controlSelections:
        $ref: '#/definitions/domain.Selection'
      description:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      objectives:
        items:
          $ref: '#/definitions/domain.ObjectiveSelection'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.DataFlow:
    properties:
      description:
        type: string
      diagrams:
        description: Description is a summary of the system's data flow.
        items:
          $ref: '#/definitions/domain.Diagram'
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.Diagram:
    properties:
      caption:
        description: Caption provides a brief annotation for the diagram.
        type: string
      description:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
      uuid:
        description: Uuid is a machine-oriented, globally unique identifier that can
          be used to reference this diagram elsewhere in this or other OSCAL instances.
        type: string
    type: object
  domain.DocumentIdentifier:
    properties:
      identifier:
        description: The document identifier.
        type: string
      scheme:
        description: Qualifies the kind of document identifier using a URI.
    type: object
  domain.Evidence:
    properties:
      description:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.Facet:
    properties:
      description:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      name:
        type: string
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      system:
        description: 'One of: http://fedramp.gov, http://fedramp.gov/ns/oscal, http://csrc.nist.gov/ns/oscal,
          http://csrc.nist.gov/ns/oscal/unknown, http://cve.mitre.org, http://www.first.org/cvss/v2.0,
          http://www.first.org/cvss/v3.0, http://www.first.org/cvss/v3.1'
        type: string
      title:
        type: string
      value:
        type: string
    type: object
  domain.Finding:
    properties:
      description:
        type: string
      id:
        type: string
      implementationStatementId:
        description: ImplementationStatementId Reference to the implementation statement
          in the SSP to which this finding is related.
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      originActors:
        description: |-
          Actors identify the source of the finding, such as a tool, interviewed person, or activity
          Maps to the OSCAL "origins" property
        items:
          type: string
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      relatedObservations:
        items:
          type: string
        type: array
      relatedRisks:
        items:
          type: string
        type: array
      remarks:
        type: string
      status:
        type: string
      target:
        type: string
      tasks:
        items:
          $ref: '#/definitions/domain.Task'
        type: array
      title:
        type: string
    type: object
  domain.Guideline:
    properties:
      prose:
        type: string
    type: object
  domain.HowManyType:
    enum:
    - 0
    - 1
    - 2
    type: integer
    x-enum-varnames:
    - AllOf
    - OneOf
    - OneOrMore
  domain.Impact:
    properties:
      adjustment_justification:
        type: string
      base:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      selected:
        type: string
    type: object
  domain.InformationType:
    properties:
      availability_impact:
        $ref: '#/definitions/domain.Impact'
      categorizations:
        items:
          $ref: '#/definitions/domain.InformationTypeCategorization'
        type: array
      confidentiality_impact:
        $ref: '#/definitions/domain.Impact'
      description:
        type: string
      integrity_impact:
        $ref: '#/definitions/domain.Impact'
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
      uuid:
        type: string
    type: object
  domain.InformationTypeCategorization:
    properties:
      ids:
        description: 'NOTE: This part is a bit blurred'
        items:
          type: string
        type: array
      system:
        description: 'This is an enum but right now it has only one value: http://doi.org/10.6028/NIST.SP.800-60v2r1'
        type: string
    type: object
  domain.Link:
    properties:
      href:
        type: string
      mediaType:
        type: string
      rel:
        type: string
      resourceFragment:
        type: string
      text:
        type: string
    type: object
  domain.LocalDefinition:
    properties:
      activities:
        description: Reference to Activity
        items:
          type: string
        type: array
      components:
        description: Reference to component.Component
        items:
          type: string
        type: array
      inventoryItems:
        description: Reference to ssp.InventoryItem
        items:
          type: string
        type: array
      objectives:
        items:
          $ref: '#/definitions/domain.Objective'
        type: array
      remarks:
        type: string
      users:
        description: Reference to identity.User
        items:
          type: string
        type: array
    type: object
  domain.LogEntry:
    properties:
      description:
        type: string
      end:
        description: Identifies the end date and time of an event. If the event is
          a point in time, the start and end will be the same date and time.
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      loggedBy:
        items:
          type: string
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      start:
        description: Identifies the start date and time of an event.
        type: string
      title:
        type: string
    type: object
  domain.Metadata:
    properties:
      actions:
        items:
          $ref: '#/definitions/domain.Action'
        type: array
      partyUuids:
        items:
          type: string
        type: array
      responsiblePartyUuids:
        items:
          type: string
        type: array
      revisions:
        items:
          $ref: '#/definitions/domain.Revision'
        type: array
      roleUuids:
        items:
          type: string
        type: array
    type: object
  domain.NetworkArchitecture:
    properties:
      description:
        type: string
      diagrams:
        items:
          $ref: '#/definitions/domain.Diagram'
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.Objective:
    properties:
      activities:
        description: Reference to Activity
        items:
          type: string
        type: array
      components:
        description: Reference to component.Component
        items:
          type: string
        type: array
      description:
        type: string
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
      includeAll:
        type: boolean
      inventoryItems:
        description: Reference to ssp.InventoryItem
        items:
          type: string
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      objectives:
        items:
          $ref: '#/definitions/domain.Objective'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
      users:
        description: Reference to identity.User
        items:
          type: string
        type: array
    type: object
  domain.ObjectiveSelection:
    properties:
      description:
        type: string
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
      includeAll:
        type: boolean
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      title:
        type: string
    type: object
  domain.Observation:
    properties:
      collected:
        type: string
      description:
        type: string
      evidences:
        items:
          $ref: '#/definitions/domain.Evidence'
        type: array
      expires:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      methods:
        items:
          $ref: '#/definitions/domain.ObservationMethod'
        type: array
      originActors:
        description: Actors / Tasks Identify the source of the finding, such as a
          tool, interviewed person, or activity
        items:
          type: string
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      relatedTasks:
        items:
          type: string
        type: array
      remarks:
        type: string
      subjects:
        items:
          type: string
        type: array
      title:
        type: string
      types:
        items:
          $ref: '#/definitions/domain.ObservationType'
        type: array
    type: object
  domain.ObservationMethod:
    enum:
    - examine
    - interview
    - test
    - unknown
    type: string
    x-enum-varnames:
    - ObservationMethodExamine
    - ObservationMethodInterview
    - ObservationMethodTest
    - ObservationMethodUnknown
  domain.ObservationType:
    enum:
    - ssp-statement-issue
    - control-objective
    - mitigation
    - finding
    - historic
    type: string
    x-enum-varnames:
    - ObservationTypeSSPStatementIssue
    - ObservationTypeControlObjective
    - ObservationTypeMitigation
    - ObservationTypeFinding
    - ObservationTypeHistoric
  domain.OperationalStatus:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - Disposition
    - Operational
    - Other
    - UnderDevelopment
    - UnderMajorModification
  domain.Parameter:
    properties:
      class:
        type: string
      constraints:
        items:
          $ref: '#/definitions/domain.Constraint'
        type: array
      guidelines:
        items:
          $ref: '#/definitions/domain.Guideline'
        type: array
      label:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      select:
        $ref: '#/definitions/domain.ParameterSelection'
      usage:
        type: string
      uuid:
        type: string
      values:
        items:
          type: string
        type: array
    type: object
  domain.ParameterSelection:
    properties:
      choices:
        items:
          type: string
        type: array
      howMany:
        $ref: '#/definitions/domain.HowManyType'
    type: object
  domain.Part:
    properties:
      class:
        description: An optional textual providing a sub-type or characterization
          of the part's name, or a category to which the part belongs.
        type: string
      id:
        description: A unique identifier for the part.
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      name:
        description: A textual label that uniquely identifies the part's semantic
          type, which exists in a value space qualified by the ns.
        type: string
      ns:
        description: An optional namespace qualifying the part's name. This allows
          different organizations to associate distinct semantics with the same name.
        type: string
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      prose:
        description: Permits multiple paragraphs, lists, tables etc.
        type: string
      title:
        description: An optional name given to the part, which may be used by a tool
          for display and navigation.
        type: string
    type: object
  domain.PlanPrecis:
    properties:
      id:
        type: string
      title:
        description: Title A name given to the assessment plan. OSCAL doesn't have
          this, but we need it for our use case.
        type: string
    type: object
  domain.Property:
    properties:
      class:
        type: string
      group:
        type: string
      name:
        type: string
      ns:
        type: string
      remarks:
        type: string
      value:
        type: string
    type: object
  domain.Provider:
    properties:
      configuration:
        additionalProperties:
          type: string
        type: object
      image:
        type: string
      name:
        type: string
      tag:
        type: string
    type: object
  domain.Resource:
    properties:
      base64:
        allOf:
        - $ref: '#/definitions/domain.Base64'
        description: A resource encoded using the Base64 alphabet.
      citation:
        allOf:
        - $ref: '#/definitions/domain.Citation'
        description: An optional citation associated with the resource.
      description:
        description: An optional short summary of the resource.
        type: string
      document-ids:
        description: Document identifiers associated with the resource.
        items:
          $ref: '#/definitions/domain.DocumentIdentifier'
        type: array
      props:
        description: Properties of the resource.
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        description: Remarks about the resource.
        type: string
      rlinks:
        description: Related links of the resource.
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      title:
        description: An optional name given to the resource.
        type: string
      uuid:
        description: A unique identifier for a resource.
        type: string
    type: object
  domain.Response:
    properties:
      description:
        type: string
      id:
        type: string
      lifecycle:
        description: |-
          Identifies whether this is a recommendation, such as from an assessor or tool, or an actual plan accepted by the system owner.
          One of: recommendation, planned, completed
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      originActors:
        description: Actors / Tasks Identify the source of the finding, such as a
          tool, interviewed person, or activity
        items:
          type: string
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      relatedTasks:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  domain.Result:
    properties:
      _id:
        type: string
      assessmentLogEntries:
        items:
          $ref: '#/definitions/domain.LogEntry'
        type: array
      attestations:
        items:
          $ref: '#/definitions/domain.Attestation'
        type: array
      description:
        type: string
      end:
        type: string
      findings:
        items:
          $ref: '#/definitions/domain.Finding'
        type: array
      labels:
        additionalProperties:
          type: string
        type: object
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      localDefinitions:
        $ref: '#/definitions/domain.LocalDefinition'
      observations:
        items:
          $ref: '#/definitions/domain.Observation'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      reviewedControls:
        items:
          $ref: '#/definitions/domain.ControlsAndObjectives'
        type: array
      risks:
        items:
          $ref: '#/definitions/domain.Risk'
        type: array
      start:
        type: string
      streamId:
        type: string
      title:
        type: string
    type: object
  domain.Revision:
    properties:
      description:
        type: string
      lastModified:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      oscalVersion:
        type: string
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      published:
        type: string
      remarks:
        type: string
      title:
        type: string
      version:
        type: string
    type: object
  domain.Risk:
    properties:
      characterizations:
        items:
          $ref: '#/definitions/domain.Characterization'
        type: array
      deadline:
        type: string
      description:
        description: A human-readable summary of the identified risk, to include a
          statement of how the risk impacts the system.
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      mitigatingFactors:
        items:
          type: string
        type: array
      originActors:
        description: Actors / Tasks Identify the source of the finding, such as a
          tool, interviewed person, or activity
        items:
          type: string
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      relatedObservations:
        items:
          type: string
        type: array
      relatedTasks:
        items:
          type: string
        type: array
      remediations:
        items:
          $ref: '#/definitions/domain.Response'
        type: array
      riskLog:
        items:
          $ref: '#/definitions/domain.RiskLogEntry'
        type: array
      statement:
        description: A summary of impact for how the risk affects the system.
        type: string
      status:
        allOf:
        - $ref: '#/definitions/domain.RiskStatus'
        description: Describes the status of the risk.
      threats:
        items:
          type: string
        type: array
      title:
        description: The title for this risk.
        type: string
    type: object
  domain.RiskLogEntry:
    properties:
      description:
        type: string
      end:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      loggedBy:
        $ref: '#/definitions/domain.Actor'
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      start:
        type: string
      title:
        type: string
    type: object
  domain.RiskStatus:
    enum:
    - open
    - investigating
    - remediating
    - deviation-requested
    - deviation-approved
    - closed
    type: string
    x-enum-varnames:
    - RiskStatusOpen
    - RiskStatusInvestigating
    - RiskStatusRemediating
    - RiskStatusDeviationRequested
    - RiskStatusDeviationApproved
    - RiskStatusClosed
  domain.SecurityImpactLevel:
    properties:
      objective_availability:
        type: string
      objective_confidentiality:
        type: string
      objective_integrity:
        type: string
    type: object
  domain.Selection:
    properties:
      exclude:
        items:
          type: string
        type: array
      include:
        items:
          type: string
        type: array
      includeAll:
        type: boolean
    type: object
  domain.Step:
    properties:
      description:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      responsibleRoles:
        items:
          type: string
        type: array
      title:
        type: string
    type: object
  domain.SubjectMatchExpression:
    properties:
      key:
        type: string
      operator:
        type: string
      values:
        items:
          type: string
        type: array
    type: object
  domain.SubjectSelection:
    properties:
      description:
        type: string
      expressions:
        items:
          $ref: '#/definitions/domain.SubjectMatchExpression'
        type: array
      ids:
        items:
          type: string
        type: array
      labels:
        additionalProperties:
          type: string
        type: object
      query:
        type: string
      title:
        type: string
    type: object
  domain.SystemCharacteristics:
    properties:
      actions:
        items:
          $ref: '#/definitions/domain.Action'
        type: array
      authorization_boundary:
        $ref: '#/definitions/domain.AuthorizationBoundary'
      control_implementation:
        items:
          type: string
        type: array
      data_flow:
        $ref: '#/definitions/domain.DataFlow'
      date_authorized:
        type: string
      description:
        type: string
      import_profile:
        items:
          type: string
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      network_architecture:
        $ref: '#/definitions/domain.NetworkArchitecture'
      partyUuids:
        items:
          type: string
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      responsible_parties:
        items:
          type: string
        type: array
      responsiblePartyUuids:
        items:
          type: string
        type: array
      revisions:
        items:
          $ref: '#/definitions/domain.Revision'
        type: array
      roleUuids:
        items:
          type: string
        type: array
      security_impact_level:
        $ref: '#/definitions/domain.SecurityImpactLevel'
      security_sensitivity_level:
        description: The overall information system sensitivity categorization, such
          as defined by FIPS-199.
        type: string
      status:
        $ref: '#/definitions/domain.OperationalStatus'
      system_ids:
        description: One of http://fedramp.gov/ns/oscal, https://fedramp.gov", http://ietf.org/rfc/rfc4122",
          https://ietf.org/rfc/rfc4122
        items:
          type: string
        type: array
      system_information:
        $ref: '#/definitions/domain.SystemInformation'
      system_name:
        description: The full name of the system.
        type: string
      system_name_short:
        description: A short name for the system, such as an acronym, that is suitable
          for display in a data table or summary list.
        type: string
      title:
        type: string
      uuid:
        type: string
    type: object
  domain.SystemInformation:
    properties:
      information_types:
        description: Contains details about one information type that is stored, processed,
          or transmitted by the system, such as privacy information, and those defined
          in NIST SP 800-60.
        items:
          $ref: '#/definitions/domain.InformationType'
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      uuid:
        type: string
    type: object
  domain.SystemSecurityPlan:
    properties:
      actions:
        items:
          $ref: '#/definitions/domain.Action'
        type: array
      backmatter:
        $ref: '#/definitions/domain.BackMatter'
      control_implementation:
        description: Reference to the control implementation
        items:
          type: string
        type: array
      import_profile:
        description: Reference to a profile
        type: string
      partyUuids:
        items:
          type: string
        type: array
      responsiblePartyUuids:
        items:
          type: string
        type: array
      revisions:
        items:
          $ref: '#/definitions/domain.Revision'
        type: array
      roleUuids:
        items:
          type: string
        type: array
      system_characteristics:
        $ref: '#/definitions/domain.SystemCharacteristics'
      title:
        type: string
      uuid:
        type: string
    type: object
  domain.Task:
    properties:
      activities:
        items:
          $ref: '#/definitions/domain.Activity'
        type: array
      dependencies:
        items:
          $ref: '#/definitions/domain.TaskDependency'
        type: array
      description:
        type: string
      id:
        type: string
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      props:
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      remarks:
        type: string
      responsibleRoles:
        items:
          type: string
        type: array
      schedule:
        type: string
      subjects:
        description: |-
          Subjects hold all the subjects that the activities act upon.
          TODO: Should this be []Subject?
        items:
          type: string
        type: array
      tasks:
        items:
          type: string
        type: array
      title:
        type: string
      type:
        $ref: '#/definitions/domain.TaskType'
    type: object
  domain.TaskDependency:
    properties:
      remarks:
        type: string
      taskUuid:
        type: string
    type: object
  domain.TaskType:
    enum:
    - milestone
    - action
    type: string
    x-enum-varnames:
    - TaskTypeMilestone
    - TaskTypeAction
  handler.CreateSSPRequest:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  handler.GenericDataListResponse-domain_Result:
    properties:
      data:
        description: Items from the list response
        items:
          $ref: '#/definitions/domain.Result'
        type: array
    type: object
  handler.GenericDataListResponse-service_StreamRecords:
    properties:
      data:
        description: Items from the list response
        items:
          $ref: '#/definitions/service.StreamRecords'
        type: array
    type: object
  handler.GenericDataResponse-domain_Result:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/domain.Result'
        description: Items from the list response
    type: object
  handler.GenericDataResponse-handler_PlanResponse:
    properties:
      data:
        allOf:
        - $ref: '#/definitions/handler.PlanResponse'
        description: Items from the list response
    type: object
  handler.PlanResponse:
    properties:
      filter:
        $ref: '#/definitions/labelfilter.Filter'
      id:
        type: string
      title:
        type: string
    type: object
  handler.UpdateCatalogRequest:
    properties:
      backMatter:
        $ref: '#/definitions/domain.BackMatter'
      controlUuids:
        items:
          $ref: '#/definitions/domain.Control'
        type: array
      groupUuids:
        items:
          type: string
        type: array
      params:
        description: Metadata   domain.Metadata   `json:"metadata" yaml:"metadata"`
        items:
          $ref: '#/definitions/domain.Parameter'
        type: array
      title:
        type: string
      uuid:
        type: string
    type: object
  handler.UpdateControlRequest:
    properties:
      class:
        type: string
      controlUuids:
        items:
          type: string
        type: array
      links:
        items:
          $ref: '#/definitions/domain.Link'
        type: array
      params:
        items:
          $ref: '#/definitions/domain.Parameter'
        type: array
      parts:
        items:
          $ref: '#/definitions/domain.Part'
        type: array
      props:
        description: Uuid     domain.Uuid        `json:"uuid" yaml:"uuid"`
        items:
          $ref: '#/definitions/domain.Property'
        type: array
      title:
        type: string
    type: object
  handler.UpdateSSPRequest:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  handler.attachMetadataRequest:
    properties:
      collection:
        type: string
      id:
        type: string
      revisionDescription:
        type: string
      revisionRemarks:
        type: string
      revisionTitle:
        type: string
    required:
    - collection
    - id
    type: object
  handler.catalogIdResponse:
    properties:
      id:
        description: |-
          The unique identifier of the catalog.
          Required: true
          Example: "123abc"
        type: string
    type: object
  handler.createActivityRequest:
    properties:
      description:
        type: string
      provider:
        properties:
          configuration:
            additionalProperties:
              type: string
            type: object
          image:
            type: string
          name:
            type: string
          tag:
            type: string
        required:
        - image
        - name
        - tag
        type: object
      subjects:
        properties:
          description:
            type: string
          expressions:
            items:
              properties:
                key:
                  type: string
                operator:
                  type: string
                values:
                  items:
                    type: string
                  type: array
              type: object
            type: array
          ids:
            items:
              type: string
            type: array
          labels:
            additionalProperties:
              type: string
            type: object
          query:
            type: string
          title:
            type: string
        required:
        - description
        - title
        type: object
      title:
        type: string
    required:
    - provider
    - title
    type: object
  handler.createCatalogRequest:
    properties:
      catalog:
        properties:
          title:
            type: string
        required:
        - title
        type: object
    type: object
  handler.createControlRequest:
    properties:
      control:
        properties:
          title:
            type: string
        required:
        - title
        type: object
    type: object
  handler.createPlanRequest:
    properties:
      filter:
        $ref: '#/definitions/labelfilter.Filter'
      title:
        type: string
    required:
    - filter
    - title
    type: object
  handler.createTaskRequest:
    properties:
      description:
        type: string
      schedule:
        type: string
      title:
        description: 'TODO: We are keeping it minimal for now for the demo'
        type: string
      type:
        type: string
    required:
    - schedule
    - title
    - type
    type: object
  handler.idResponse:
    properties:
      id:
        description: |-
          The unique identifier of the plan.
          Required: true
          Example: "456def"
        type: string
    type: object
  labelfilter.Condition:
    properties:
      label:
        description: Label name (e.g., "type", "group", "app").
        type: string
      operator:
        description: Operator (e.g., "=", "!=", etc.).
        type: string
      value:
        description: Value for the condition (e.g., "ssh", "prod").
        type: string
    type: object
  labelfilter.Filter:
    properties:
      scope:
        $ref: '#/definitions/labelfilter.Scope'
    type: object
  labelfilter.Query:
    properties:
      operator:
        description: Logical operator (e.g., "AND", "OR").
        type: string
      scopes:
        description: Scopes can be either `Condition` or nested `Query`.
        items:
          $ref: '#/definitions/labelfilter.Scope'
        type: array
    type: object
  labelfilter.Scope:
    properties:
      condition:
        $ref: '#/definitions/labelfilter.Condition'
      query:
        $ref: '#/definitions/labelfilter.Query'
    type: object
  service.IntervalledRecord:
    properties:
      findings:
        type: integer
      hasRecords:
        type: boolean
      interval:
        type: string
      observations:
        type: integer
      title:
        type: string
    type: object
  service.StreamRecords:
    properties:
      _id:
        type: string
      records:
        items:
          $ref: '#/definitions/service.IntervalledRecord'
        type: array
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact: {}
  description: This is the API for the Compliance Framework Configuration Service.
  title: Compliance Framework Configuration Service API
  version: "1.0"
paths:
  /catalog:
    post:
      consumes:
      - application/json
      description: Create a catalog with the given title
      parameters:
      - description: Catalog to add
        in: body
        name: catalog
        required: true
        schema:
          $ref: '#/definitions/handler.createCatalogRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.catalogIdResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Create a catalog
      tags:
      - Catalog
  /catalog/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a specific catalog by its ID
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Delete a catalog
      tags:
      - Catalog
    get:
      consumes:
      - application/json
      description: Get a specific catalog by its ID
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Catalog'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Get a catalog
      tags:
      - Catalog
    patch:
      consumes:
      - application/json
      description: Update a specific catalog by its ID
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        type: string
      - description: Catalog to update
        in: body
        name: catalog
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateCatalogRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Catalog'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Update a catalog
      tags:
      - Catalog
  /catalog/{id}/controls:
    post:
      consumes:
      - application/json
      description: Create a control with the given title
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        type: string
      - description: Control to add
        in: body
        name: control
        required: true
        schema:
          $ref: '#/definitions/handler.createControlRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.catalogIdResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Create a control
      tags:
      - Catalog
  /catalog/{id}/controls/{controlId}:
    get:
      consumes:
      - application/json
      description: Get a specific control by its ID
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        type: string
      - description: Control ID
        in: path
        name: controlId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Control'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Get a control
      tags:
      - Catalog
    put:
      consumes:
      - application/json
      description: Update a specific control by its ID
      parameters:
      - description: Catalog ID
        in: path
        name: id
        required: true
        type: string
      - description: Control ID
        in: path
        name: controlId
        required: true
        type: string
      - description: Control to update
        in: body
        name: control
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateControlRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Control'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Update a control
      tags:
      - Catalog
  /metadata/revisions:
    post:
      consumes:
      - application/json
      description: This method attaches metadata to a specific revision.
      parameters:
      - description: Revision that will be attached
        in: body
        name: revision
        required: true
        schema:
          $ref: '#/definitions/handler.attachMetadataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: 'Bad Request: Error binding the request'
          schema:
            $ref: '#/definitions/api.Error'
        "404":
          description: Object not found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Attaches metadata to a specific revision
      tags:
      - Metadata
  /plan:
    post:
      consumes:
      - application/json
      description: Creates a new plan in the system
      parameters:
      - description: Plan to add
        in: body
        name: plan
        required: true
        schema:
          $ref: '#/definitions/handler.createPlanRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.idResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Create a plan
      tags:
      - Plan
  /plan/:id:
    get:
      consumes:
      - application/json
      description: Fetches a plan in the system
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GenericDataResponse-handler_PlanResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Fetches a plan
      tags:
      - Plan
  /plan/{id}/activate:
    put:
      consumes:
      - application/json
      description: Activate a plan by its ID. If the plan is already active, no action
        will be taken.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "500":
          description: Internal server error. The plan could not be activated.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Activate a plan
      tags:
      - Plan
  /plan/{id}/results/{resultId}/risks:
    get:
      description: Return the risks of the result with the given ID.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Result ID
        in: path
        name: resultId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Risk'
            type: array
        "500":
          description: Internal server error.
          schema:
            $ref: '#/definitions/api.Error'
      summary: Return the risks
      tags:
      - Plan
  /plan/{id}/tasks:
    post:
      consumes:
      - application/json
      description: This method creates a new task and adds it to a specific plan.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: string
      - description: Task to add
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/handler.createTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully added the task to the plan
          schema:
            type: string
        "404":
          description: Plan not found
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: 'Unprocessable Entity: Error binding the request'
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Creates a new task for a specific plan
      tags:
      - Plan
  /plan/{id}/tasks/{taskId}/activities:
    post:
      consumes:
      - application/json
      description: This function is used to create an activity for a given task.
      parameters:
      - description: Plan ID
        in: path
        name: id
        required: true
        type: integer
      - description: Task ID
        in: path
        name: taskId
        required: true
        type: integer
      - description: Activity
        in: body
        name: activity
        required: true
        schema:
          $ref: '#/definitions/handler.createActivityRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.idResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Create activity
      tags:
      - Plan
  /plans:
    get:
      consumes:
      - application/json
      description: Returns id and title of all the plans in the system
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.PlanPrecis'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Gets plan summaries
      tags:
      - Plan
  /results/:id:
    get:
      consumes:
      - application/json
      description: Returns singular result
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GenericDataResponse-domain_Result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Get a result
      tags:
      - Result
  /results/plan/:plan:
    get:
      consumes:
      - application/json
      description: Returns data of all the latest results for a plan
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GenericDataListResponse-domain_Result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Gets a plan's results
      tags:
      - Result
  /results/search:
    post:
      consumes:
      - application/json
      description: Returns the compliance over time records for a particular streamId
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GenericDataListResponse-service_StreamRecords'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Get Compliance Over Time for stream
      tags:
      - Result
  /results/stream/:stream:
    get:
      consumes:
      - application/json
      description: Returns a list of all the results for a strea,data of all the latest
        results for a plan
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handler.GenericDataListResponse-domain_Result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Gets a plan's results
      tags:
      - Result
  /ssp:
    get:
      consumes:
      - application/json
      description: List all SSP
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SystemSecurityPlan'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: List all SSPs
      tags:
      - SSP
    post:
      consumes:
      - application/json
      description: Create an SSP with the given title
      parameters:
      - description: SSP to add
        in: body
        name: SSP
        required: true
        schema:
          $ref: '#/definitions/handler.CreateSSPRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/handler.idResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.Error'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Create an SSP
      tags:
      - SSP
  /ssp/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an SSP with the given ID
      parameters:
      - description: SSP ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Delete an SSP
      tags:
      - SSP
    get:
      consumes:
      - application/json
      description: Get an SSP by its ID
      parameters:
      - description: SSP ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SystemSecurityPlan'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Get an SSP by ID
      tags:
      - SSP
    put:
      consumes:
      - application/json
      description: Update an SSP with the given ID
      parameters:
      - description: SSP ID
        in: path
        name: id
        required: true
        type: string
      - description: SSP to update
        in: body
        name: SSP
        required: true
        schema:
          $ref: '#/definitions/handler.UpdateSSPRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.SystemSecurityPlan'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/api.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/api.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/api.Error'
      summary: Update an SSP
      tags:
      - SSP
swagger: "2.0"
